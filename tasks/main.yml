---

- name: Setup | create credentials directory
  file:
    path: "{{ ansibleremote_root_public_key | dirname }}"
    state: directory
  become: no
  delegate_to: localhost

- name: Setup | create root ssh key
  user:
    name: root
    generate_ssh_key: yes
  register: root

- name: Setup | Save SSH public key
  copy:
    content: "{{ root.ssh_public_key }}"
    dest: "{{ ansibleremote_root_public_key }}"
  become: no
  delegate_to: localhost

- name: Setup | create ansibleremote user
  user:
    name: ansibleremote
    comment: "Ansible Remote"
    generate_ssh_key: yes
    createhome: yes
    system: yes
  register: ansibleremote

- name: Setup | Save SSH public key
  copy:
    content: "{{ ansibleremote.ssh_public_key }}"
    dest: "{{ ansibleremote_user_public_key }}"
  become: no
  delegate_to: localhost

- name: Setup | create ansibleremote user
  user:
    name: ansibleremote
    comment: "Ansible Remote"
    generate_ssh_key: yes
    createhome: yes
    system: yes
  register: ansibleremote

- name: Setup | authorized key upload
  authorized_key:
    user: ansibleremote
    key: '{{ lookup("file", item) }}'
    path: '/home/ansibleremote/.ssh/authorized_keys'
    manage_dir: no
  with_fileglob:
  - ../../../public_keys/*.pub

- name: Sudoers | touch sudoers.d file
  file:
    path: /etc/sudoers.d/00_ansibleremote
    owner: root
    group: root
    mode: 'u=r,g=r,o='
    state: touch

- name: Sudoers | update sudoers file and validate
  lineinfile:
    dest: /etc/sudoers.d/00_ansibleremote
    insertafter: EOF
    line: 'ansibleremote ALL=(ALL) NOPASSWD: ALL'
    regexp: 'ansibleremote ALL=(ALL) NOPASSWD: ALL'
    state: present
